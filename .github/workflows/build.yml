name: Build and Release Executables

on:
  push:
    tags:
      - v*  # 当推送带有v前缀的标签时触发工作流
  workflow_dispatch:  # 手动触发工作流

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            extension: ""
          - os: windows-latest
            extension: .exe

    steps:
      # 检出代码仓库
      - name: Checkout code
        uses: actions/checkout@v2
      
      # 设置Python环境为3.10.6
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.6  # 指定Python版本为3.10.6

      # 安装依赖项（如果有）
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 安装 PyInstaller
      - name: Install PyInstaller
        run: pip install pyinstaller

      # 打包为可执行文件，使用 per_station_data.py
      - name: Build per-executable with PyInstaller
        run: |
          pyinstaller --strip --clean --onefile --name per_station_data --distpath ./dist per_station_data.py  # 使用 per_station_data.py 文件
          ls -l ./dist  # 打印 dist 目录，确认文件生成

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --strip --clean --onefile --name xingtou_station_data --distpath ./dist station_data.py  # 使用 station_data.py 文件
          ls -l ./dist  # 打印 dist 目录，确认文件生成

      # 列出 dist 目录中的文件
      - name: List dist directory
        run: ls -R ./dist

      # 上传生成的二进制文件为 artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: executable-${{ matrix.os }}
          path: ./dist/per_station_data${{ matrix.extension }}

      # 上传到 Release
      - name: Upload to release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          files: ./dist/*
          body_path: CHANGELOG.md


